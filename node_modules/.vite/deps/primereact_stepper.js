"use client";
import {
  CSSTransition
} from "./chunk-V5QPO5QD.js";
import {
  ComponentBase,
  PrimeReactContext,
  UniqueComponentId,
  classNames,
  useHandleStyle,
  useMergeProps,
  useMountEffect
} from "./chunk-DBGKPHSK.js";
import "./chunk-TRA4VWQL.js";
import {
  require_react
} from "./chunk-GMHSYVPX.js";
import {
  __toESM
} from "./chunk-UV5CTPV7.js";

// node_modules/primereact/stepper/stepper.esm.js
var React = __toESM(require_react());
var import_react = __toESM(require_react());
function _typeof(o) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof(o);
}
function _toPrimitive(input, hint) {
  if (_typeof(input) !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (_typeof(res) !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _toPropertyKey(arg) {
  var key = _toPrimitive(arg, "string");
  return _typeof(key) === "symbol" ? key : String(key);
}
function _defineProperty(obj, key, value) {
  key = _toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _iterableToArrayLimit(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray(o, minLen);
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
var classes = {
  root: function root(_ref) {
    var props = _ref.props;
    return classNames("p-stepper p-component", {
      "p-stepper-horizontal": props.orientation === "horizontal",
      "p-stepper-vertical": props.orientation === "vertical",
      "p-readonly": props.linear
    });
  },
  nav: "p-stepper-nav",
  stepper: {
    header: function header(_ref2) {
      var isStepActive = _ref2.isStepActive, isItemDisabled = _ref2.isItemDisabled, index = _ref2.index;
      return classNames("p-stepper-header", {
        "p-highlight": isStepActive(index),
        "p-disabled": isItemDisabled(index)
      });
    },
    action: "p-stepper-action p-component",
    number: "p-stepper-number",
    title: "p-stepper-title",
    separator: "p-stepper-separator",
    toggleableContent: "p-stepper-toggleable-content",
    content: function content(_ref3) {
      var props = _ref3.props;
      return classNames("p-stepper-content", {
        "p-toggleable-content": props.orientation === "vertical"
      });
    }
  },
  panelContainer: "p-stepper-panels",
  panel: function panel(_ref4) {
    var props = _ref4.props, isStepActive = _ref4.isStepActive, index = _ref4.index;
    return classNames("p-stepper-panel", {
      "p-stepper-panel-active": props.orientation === "vertical" && isStepActive(index)
    });
  }
};
var styles = "\n@layer primereact {\n    .p-stepper .p-stepper-nav {\n        position: relative;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin: 0;\n        padding: 0;\n        list-style-type: none;\n        overflow-x: auto;\n    }\n    \n    .p-stepper-vertical .p-stepper-nav {\n        flex-direction: column;\n    }\n    \n    .p-stepper-header {\n        position: relative;\n        display: flex;\n        flex: 1 1 auto;\n        align-items: center;\n    \n        &:last-of-type {\n            flex: initial;\n        }\n    }\n    \n    .p-stepper-header .p-stepper-action {\n        border: 0 none;\n        display: inline-flex;\n        align-items: center;\n        text-decoration: none;\n        cursor: pointer;\n    \n        &:focus-visible {\n            @include focused();\n        }\n    }\n    \n    .p-stepper.p-stepper-readonly .p-stepper-header {\n        cursor: auto;\n    }\n    \n    .p-stepper-header.p-highlight .p-stepper-action {\n        cursor: default;\n    }\n    \n    .p-stepper-title {\n        display: block;\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        max-width: 100%;\n    }\n    \n    .p-stepper-number {\n        position: relative;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n    \n    .p-stepper-separator {\n        flex: 1 1 0;\n    }\n}\n";
var StepperBase = ComponentBase.extend({
  defaultProps: {
    __TYPE: "Stepper",
    activeStep: 0,
    orientation: "horizontal",
    linear: false
  },
  css: {
    classes,
    styles
  }
});
function ownKeys$2(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread$2(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys$2(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$2(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var StepperContent = React.memo(React.forwardRef(function(props, ref) {
  var mergeProps = useMergeProps();
  var cx = props.cx, ptm = props.ptm;
  var rootProps = mergeProps(_objectSpread$2(_objectSpread$2(_objectSpread$2({
    ref,
    id: props.id,
    className: cx("stepper.content", {
      stepperpanel: props.stepperpanel,
      index: props.index
    }),
    role: "tabpanel",
    "aria-labelledby": props.ariaLabelledby
  }, props.getStepPT(props.stepperpanel, "root", props.index)), props.getStepPT(props.stepperpanel, "content", props.index)), {}, {
    "data-p-active": props.active
  }), ptm("stepperpanel"));
  var createContent = function createContent2() {
    var ComponentToRender = props.template;
    return React.createElement(ComponentToRender, {
      index: props.index,
      active: props.active,
      highlighted: props.highlighted,
      clickCallback: function clickCallback(event) {
        return props.onItemClick(event, props.index);
      },
      prevCallback: function prevCallback(event) {
        return props.prevCallback(event, props.index);
      },
      nextCallback: function nextCallback(event) {
        return props.nextCallback(event, props.index);
      }
    });
  };
  return React.createElement("div", rootProps, props.template ? createContent() : props.stepperpanel);
}));
StepperContent.displayName = "StepperContent";
var StepperHeader = React.memo(React.forwardRef(function(props, ref) {
  var mergeProps = useMergeProps();
  var cx = props.cx;
  var buttonProps = mergeProps({
    ref,
    id: props.id,
    className: cx("stepper.action"),
    role: "tab",
    type: "button",
    tabIndex: props.disabled ? -1 : void 0,
    "aria-controls": props.ariaControls,
    onClick: function onClick(e) {
      return props.clickCallback(e, props.index);
    }
  });
  return props.template ? props.template() : React.createElement("button", buttonProps, React.createElement("span", {
    className: cx("stepper.number")
  }, props.index + 1), React.createElement("span", {
    className: cx("stepper.title")
  }, props.getStepProp(props.stepperpanel, "header")));
}));
StepperHeader.displayName = "StepperHeader";
function ownKeys$1(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread$1(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys$1(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$1(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var StepperSeparator = React.memo(React.forwardRef(function(props, ref) {
  var mergeProps = useMergeProps();
  var separatorProps = mergeProps(_objectSpread$1({
    ref,
    "aria-hidden": true,
    className: props.separatorClass
  }, props.getStepPT(props.stepperpanel, "separator", props.index)));
  return props.template ? props.template() : React.createElement("span", separatorProps);
}));
StepperSeparator.displayName = "StepperSeparator";
function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var Stepper = import_react.default.memo(import_react.default.forwardRef(function(inProps, ref) {
  var mergeProps = useMergeProps();
  var context = import_react.default.useContext(PrimeReactContext);
  var props = StepperBase.getProps(inProps, context);
  var _StepperBase$setMetaD = StepperBase.setMetaData({
    props
  }), ptm = _StepperBase$setMetaD.ptm, cx = _StepperBase$setMetaD.cx, isUnstyled = _StepperBase$setMetaD.isUnstyled, ptmo = _StepperBase$setMetaD.ptmo;
  var _React$useState = import_react.default.useState(props.id), _React$useState2 = _slicedToArray(_React$useState, 2), idState = _React$useState2[0], setIdState = _React$useState2[1];
  var _React$useState3 = import_react.default.useState(props.activeStep), _React$useState4 = _slicedToArray(_React$useState3, 2), activeStepState = _React$useState4[0], setActiveStepState = _React$useState4[1];
  var navRef = import_react.default.useRef();
  useHandleStyle(StepperBase.css.styles, isUnstyled, {
    name: "stepper"
  });
  useMountEffect(function() {
    if (!idState) {
      setIdState(UniqueComponentId());
    }
  });
  var getStepProp = function getStepProp2(step, name) {
    var _step$props;
    return step === null || step === void 0 || (_step$props = step.props) === null || _step$props === void 0 ? void 0 : _step$props[name];
  };
  var getStepKey = function getStepKey2(step, index) {
    return getStepProp(step, "header") || index;
  };
  var isStep = function isStep2(child) {
    return child.type.displayName === "StepperPanel";
  };
  var isStepActive = function isStepActive2(index) {
    return activeStepState === index;
  };
  var isItemDisabled = function isItemDisabled2(index) {
    return props.linear && !isStepActive(index);
  };
  var updateActiveStep = function updateActiveStep2(event, index) {
    setActiveStepState(index);
    props.onChangeStep && props.onChangeStep({
      originalEvent: event,
      index
    });
  };
  var getStepHeaderActionId = function getStepHeaderActionId2(index) {
    return "".concat(idState, "_").concat(index, "_header_action");
  };
  var getStepContentId = function getStepContentId2(index) {
    return "".concat(idState, "_").concat(index, "content");
  };
  var stepperPanels = function stepperPanels2() {
    return import_react.default.Children.toArray(props.children).reduce(function(stepperpanels, child) {
      if (isStep(child)) {
        stepperpanels.push(child);
      } else if (child && Array.isArray(child)) {
        import_react.default.Children.toArray(child.props.children).forEach(function(nestedChild) {
          if (isStep(nestedChild)) {
            stepperpanels.push(nestedChild);
          }
        });
      }
      return stepperpanels;
    }, []);
  };
  var _prevCallback = function prevCallback(event, index) {
    if (index !== 0) {
      updateActiveStep(event, index - 1);
    }
  };
  var _nextCallback = function nextCallback(event, index) {
    if (index !== stepperPanels().length - 1) {
      updateActiveStep(event, index + 1);
    }
  };
  var getStepPT = function getStepPT2(step, key, index) {
    var count = stepperPanels().length;
    var stepMetaData = {
      props: step.props,
      parent: {
        props
      },
      context: {
        index,
        count,
        first: index === 0,
        last: index === count - 1,
        active: isStepActive(index),
        highlighted: index < activeStepState,
        disabled: isItemDisabled(index)
      }
    };
    return mergeProps(ptm("stepperpanel.".concat(key), {
      stepperpanel: stepMetaData
    }), ptm("stepperpanel.".concat(key), stepMetaData), ptmo(getStepProp(step, "pt"), key, stepMetaData));
  };
  var onItemClick = function onItemClick2(event, index) {
    if (props.linear) {
      event.preventDefault();
      return;
    }
    if (index !== activeStepState) {
      updateActiveStep(event, index);
    }
  };
  var createPanel = function createPanel2() {
    return stepperPanels().map(function(step, index) {
      var _step$children, _step$children2;
      var panelProps = mergeProps({
        className: classNames(cx("stepper.header", {
          isStepActive,
          isItemDisabled,
          step,
          index
        })),
        "aria-current": isStepActive(index) && "step",
        role: "presentation",
        "data-p-highlight": isStepActive(index),
        "data-p-disabled": isItemDisabled(index),
        "data-p-active": isStepActive(index)
      }, ptm("stepperpanel"));
      return import_react.default.createElement("li", _extends({
        key: getStepKey(step, index)
      }, panelProps), import_react.default.createElement(StepperHeader, {
        id: getStepHeaderActionId(index),
        template: (_step$children = step.children) === null || _step$children === void 0 ? void 0 : _step$children.header,
        stepperpanel: step,
        index,
        disabled: isItemDisabled(index),
        active: isStepActive(index),
        highlighted: index < activeStepState,
        ariaControls: getStepContentId(index),
        clickCallback: onItemClick,
        getStepPT,
        getStepProp,
        cx
      }), index !== stepperPanels().length - 1 && import_react.default.createElement(StepperSeparator, {
        template: (_step$children2 = step.children) === null || _step$children2 === void 0 ? void 0 : _step$children2.separator,
        separatorClass: cx("stepper.separator"),
        stepperpanel: step,
        index,
        active: isStepActive(index),
        highlighted: index < activeStepState,
        getStepPT
      }));
    });
  };
  import_react.default.useImperativeHandle(ref, function() {
    return {
      getElement: function getElement() {
        return navRef.current;
      },
      getActiveStep: function getActiveStep() {
        return activeStepState;
      },
      setActiveStep: function setActiveStep(step) {
        return setActiveStepState(step);
      },
      nextCallback: function nextCallback(e) {
        return _nextCallback(e, activeStepState);
      },
      prevCallback: function prevCallback(e) {
        return _prevCallback(e, activeStepState);
      }
    };
  });
  var createPanelContent = function createPanelContent2() {
    return stepperPanels().map(function(step, index) {
      var _step$children3;
      if (!isStepActive(index)) {
        return null;
      }
      return import_react.default.createElement(StepperContent, {
        key: getStepContentId(index),
        id: getStepContentId(index),
        tempate: step === null || step === void 0 || (_step$children3 = step.children) === null || _step$children3 === void 0 ? void 0 : _step$children3.content,
        stepperpanel: step,
        index,
        active: isStepActive(index),
        highlighted: index < activeStepState,
        clickCallback: onItemClick,
        prevCallback: _prevCallback,
        nextCallback: _nextCallback,
        getStepPT,
        ariaLabelledby: getStepHeaderActionId(index),
        ptm,
        cx
      });
    });
  };
  var createHorizontal = function createHorizontal2() {
    var items = createPanel();
    var navProps = mergeProps({
      className: classNames(cx("nav")),
      ref: navRef
    }, ptm("nav"));
    var panelContainerProps = mergeProps({
      className: cx("panelContainer")
    }, ptm("panelContainer"));
    return import_react.default.createElement(import_react.default.Fragment, null, import_react.default.createElement("ul", navProps, items), import_react.default.createElement("div", panelContainerProps, createPanelContent()));
  };
  var createVertical = function createVertical2() {
    return stepperPanels().map(function(step, index) {
      var _step$children4, _step$children5, _step$children6;
      var contentRef = import_react.default.createRef(null);
      var navProps = mergeProps(_objectSpread(_objectSpread(_objectSpread({
        ref: navRef,
        className: cx("panel", {
          props,
          index,
          isStepActive
        }),
        "aria-current": isStepActive(index) && "step"
      }, getStepPT(step, "root", index)), getStepPT(step, "panel", index)), {}, {
        "data-p-highlight": isStepActive(index),
        "data-p-disabled": isItemDisabled(index),
        "data-p-active": isStepActive(index)
      }), ptm("nav"));
      var headerProps = mergeProps(_objectSpread({
        className: cx("stepper.header", {
          step,
          isStepActive,
          isItemDisabled,
          index
        })
      }, getStepPT(step, "header", index)));
      var transitionProps = mergeProps(_objectSpread(_objectSpread({
        classNames: cx("stepper.content")
      }, getStepPT(step, "transition", index)), {}, {
        timeout: {
          enter: 1e3,
          exit: 450
        },
        "in": isStepActive(index),
        unmountOnExit: true
      }));
      var toggleableContentProps = mergeProps(_objectSpread({
        ref: contentRef,
        className: cx("stepper.toggleableContent")
      }, getStepPT(step, "toggleableContent", index)));
      return import_react.default.createElement("div", _extends({
        key: getStepKey(step, index)
      }, navProps), import_react.default.createElement("div", headerProps, import_react.default.createElement(StepperHeader, {
        id: getStepHeaderActionId(index),
        template: (_step$children4 = step.children) === null || _step$children4 === void 0 ? void 0 : _step$children4.header,
        stepperpanel: step,
        index,
        disabled: isItemDisabled(index),
        active: isStepActive(index),
        highlighted: index < activeStepState,
        ariaControls: getStepContentId(index),
        clickCallback: onItemClick,
        getStepPT,
        getStepProp,
        cx
      })), import_react.default.createElement(CSSTransition, _extends({
        nodeRef: contentRef
      }, transitionProps), import_react.default.createElement("div", toggleableContentProps, index !== stepperPanels().length - 1 && import_react.default.createElement(StepperSeparator, {
        template: (_step$children5 = step.children) === null || _step$children5 === void 0 ? void 0 : _step$children5.separator,
        separatorClass: cx("stepper.separator"),
        stepperpanel: step,
        index,
        active: isStepActive(index),
        highlighted: index < activeStepState,
        getStepPT
      }), import_react.default.createElement(StepperContent, {
        key: getStepContentId(index),
        id: getStepContentId(index),
        tempate: step === null || step === void 0 || (_step$children6 = step.children) === null || _step$children6 === void 0 ? void 0 : _step$children6.content,
        stepperpanel: step,
        index,
        active: isStepActive(index),
        highlighted: index < activeStepState,
        clickCallback: onItemClick,
        prevCallback: _prevCallback,
        nextCallback: _nextCallback,
        getStepPT,
        ariaLabelledby: getStepHeaderActionId(index),
        ptm,
        cx
      }))));
    });
  };
  var rootProps = mergeProps({
    className: classNames(cx("root")),
    role: "tablist"
  }, StepperBase.getOtherProps(props), ptm("root"));
  return import_react.default.createElement("div", rootProps, props.start && props.start(), props.orientation === "horizontal" && createHorizontal(), props.orientation === "vertical" && createVertical(), props.end && props.end());
}));
StepperBase.displayName = "StepperBase";
export {
  Stepper
};
//# sourceMappingURL=primereact_stepper.js.map
