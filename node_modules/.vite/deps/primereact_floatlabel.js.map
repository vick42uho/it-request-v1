{
  "version": 3,
  "sources": ["../../primereact/floatlabel/floatlabel.esm.js"],
  "sourcesContent": ["'use client';\nimport * as React from 'react';\nimport { PrimeReactContext } from 'primereact/api';\nimport { ComponentBase, useHandleStyle } from 'primereact/componentbase';\nimport { useMergeProps } from 'primereact/hooks';\nimport { ObjectUtils, classNames } from 'primereact/utils';\n\nvar classes = {\n  root: 'p-float-label'\n};\nvar styles = \"\\n@layer primereact {\\n    .p-float-label {\\n        display: block;\\n        position: relative;\\n    }\\n    \\n    .p-float-label label {\\n        position: absolute;\\n        pointer-events: none;\\n        top: 50%;\\n        margin-top: -.5rem;\\n        transition-property: all;\\n        transition-timing-function: ease;\\n        line-height: 1;\\n    }\\n    \\n    .p-float-label:has(textarea) label {\\n        top: 1rem;\\n    }\\n    \\n    .p-float-label:has(input:focus) label,\\n    .p-float-label:has(input.p-filled) label,\\n    .p-float-label:has(input:-webkit-autofill) label,\\n    .p-float-label:has(textarea:focus) label,\\n    .p-float-label:has(textarea.p-filled) label,\\n    .p-float-label:has(.p-inputwrapper-focus) label,\\n    .p-float-label:has(.p-inputwrapper-filled) label {\\n        top: -.75rem;\\n        font-size: 12px;\\n    }\\n    \\n    .p-float-label .p-placeholder,\\n    .p-float-label input::placeholder,\\n    .p-float-label .p-inputtext::placeholder {\\n        opacity: 0;\\n        transition-property: all;\\n        transition-timing-function: ease;\\n    }\\n    \\n    .p-float-label .p-focus .p-placeholder,\\n    .p-float-label input:focus::placeholder,\\n    .p-float-label .p-inputtext:focus::placeholder {\\n        opacity: 1;\\n        transition-property: all;\\n        transition-timing-function: ease;\\n    }\\n}\";\nvar FloatLabelBase = ComponentBase.extend({\n  defaultProps: {\n    __TYPE: 'FloatLabel',\n    children: undefined\n  },\n  css: {\n    classes: classes,\n    styles: styles\n  }\n});\n\nvar FloatLabel = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function (inProps, ref) {\n  var mergeProps = useMergeProps();\n  var context = React.useContext(PrimeReactContext);\n  var props = FloatLabelBase.getProps(inProps, context);\n  var elementRef = React.useRef(ref);\n  var _FloatLabelBase$setMe = FloatLabelBase.setMetaData({\n      props: props\n    }),\n    ptm = _FloatLabelBase$setMe.ptm,\n    cx = _FloatLabelBase$setMe.cx,\n    isUnstyled = _FloatLabelBase$setMe.isUnstyled;\n  useHandleStyle(FloatLabelBase.css.styles, isUnstyled, {\n    name: 'floatlabel'\n  });\n  React.useEffect(function () {\n    ObjectUtils.combinedRefs(elementRef, ref);\n  }, [elementRef, ref]);\n  var rootProps = mergeProps({\n    ref: elementRef,\n    className: classNames(cx('root'))\n  }, FloatLabelBase.getOtherProps(props), ptm('root'));\n  return /*#__PURE__*/React.createElement(\"span\", rootProps, props.children);\n}));\nFloatLabel.displayName = 'FloatLabel';\n\nexport { FloatLabel };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AACA,YAAuB;AAMvB,IAAI,UAAU;AAAA,EACZ,MAAM;AACR;AACA,IAAI,SAAS;AACb,IAAI,iBAAiB,cAAc,OAAO;AAAA,EACxC,cAAc;AAAA,IACZ,QAAQ;AAAA,IACR,UAAU;AAAA,EACZ;AAAA,EACA,KAAK;AAAA,IACH;AAAA,IACA;AAAA,EACF;AACF,CAAC;AAED,IAAI,aAAgC,WAAyB,iBAAW,SAAU,SAAS,KAAK;AAC9F,MAAI,aAAa,cAAc;AAC/B,MAAI,UAAgB,iBAAW,iBAAiB;AAChD,MAAI,QAAQ,eAAe,SAAS,SAAS,OAAO;AACpD,MAAI,aAAmB,aAAO,GAAG;AACjC,MAAI,wBAAwB,eAAe,YAAY;AAAA,IACnD;AAAA,EACF,CAAC,GACD,MAAM,sBAAsB,KAC5B,KAAK,sBAAsB,IAC3B,aAAa,sBAAsB;AACrC,iBAAe,eAAe,IAAI,QAAQ,YAAY;AAAA,IACpD,MAAM;AAAA,EACR,CAAC;AACD,EAAM,gBAAU,WAAY;AAC1B,gBAAY,aAAa,YAAY,GAAG;AAAA,EAC1C,GAAG,CAAC,YAAY,GAAG,CAAC;AACpB,MAAI,YAAY,WAAW;AAAA,IACzB,KAAK;AAAA,IACL,WAAW,WAAW,GAAG,MAAM,CAAC;AAAA,EAClC,GAAG,eAAe,cAAc,KAAK,GAAG,IAAI,MAAM,CAAC;AACnD,SAA0B,oBAAc,QAAQ,WAAW,MAAM,QAAQ;AAC3E,CAAC,CAAC;AACF,WAAW,cAAc;",
  "names": []
}
